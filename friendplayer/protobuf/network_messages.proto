syntax = "proto3";

package fp_network;

import "client_messages.proto";
import "host_messages.proto";

message Ack {
    uint64 sequence_ack = 1;
}

message State {
    oneof State {
        ClientState client_state = 1;
        ClientStreamState client_stream_state = 2;
        HostState host_state = 3;
    }
}

message Data {
    uint64 sequence_number = 1;
    bool needs_ack = 2;
    oneof Payload {
        HostDataFrame host_frame = 3;
        ClientDataFrame client_frame = 4;
    }
}

message Heartbeat {
    uint64 timestamp = 1;
    bool is_response = 2;
}

message HSPhase1 {
    uint64 magic = 1; // EXPECT 46524E44504C5952
    string token = 2;
    string client_name = 3;
}

message HSPhase2 {
    bytes p = 1;
    bytes q = 2;
    bytes g = 3;
    bytes pubkey = 4;
}

message HSPhase3 {
    bytes pubkey = 1;
}

message Handshake {
    oneof HandshakePhase {
        HSPhase1 phase1 = 1;
        HSPhase2 phase2 = 2;
        HSPhase3 phase3 = 3;
    }
}

message StreamInfo {
    uint32 num_video_streams = 1;
    uint32 num_audio_streams = 2;
}

message Network {
    oneof Payload {
        Handshake hs_msg = 1;
        Data data_msg = 2;
        Ack ack_msg = 3;
        Heartbeat hb_msg = 4;
        State state_msg = 5;
        StreamInfo info_msg = 6;
    }
}